{% set langFilePostfix = tags | langFilePostfix %}
<style>
  .aside { 
		position: relative!important;
	}
	a.gs-title, a.gs-title b {
    font-size: 1.5rem!important;
    font-weight: 400;
	}
	.gsc-url-top {
    display: none!important;
	}
	.gs-bidi-start-align.gs-snippet {
    font-size: 1rem;
	}
	#answersNow .accordion-title {
    font-size: 1.3rem;
    color: #003d9d;
	}
	.gsc-above-wrapper-area {
		display: none;
	}
	.gsc-control-cse {
    padding: 0;
	}
</style>

<script>
	const cx = '003358532045999200914:uxxka6d3pge';
	const gcse = document.createElement('script');
	gcse.type = 'text/javascript';
	gcse.async = true;
	gcse.src = 'https://cse.google.com/cse.js?language={{(tags | langRecord).hreflang}}&cx=' + cx;
	const s = document.getElementsByTagName('script');
	s[s.length - 1].parentNode.insertBefore(gcse, s[s.length - 1]);

	const urlParam = function (name) {
		var results = new RegExp('[?&]' + name + '=([^&#]*)')
			.exec(window.location.search);

		return (results !== null) ? results[1] || 0 : false;
	}
	const urlq = urlParam('q')||'';
  const query = decodeURIComponent(urlq.replace(/\+/g,' ').toLowerCase());
	document.querySelectorAll('input[name=q]').forEach(x=>x.value=query);
</script> 

<script>
	const myWebSearchStartingCallback = query => {
		if(!query) return;

		let currentHost = `${window.location.protocol}//${window.location.hostname}`;
		if(window.location.port !== '80') {
			currentHost += `:${window.location.port}`;
		}
		history.pushState(null,null,`${currentHost}${window.location.pathname}?q=${query}`);
		document.querySelector('#answersNow').innerHTML = "";

		let search_url = `https://fa-go-covid-answ-001.azurewebsites.net/CovidAnswer?q=${query}&lang=${document.documentElement.lang}`;

		fetch(search_url)
		.then(response => response.json())
		.then(data => {
			console.log("Got data",data);

			let answers = [...data[0].answers];
			if(answers[0].questions.length > 0) {
				let html = `<h3>Quick answers</h3>
					${answers.map(function(a) {
						if(a.answer.indexOf('platform.twitter.com/widgets') > -1) {
							let newScript = document.createElement("script");
							newScript.src = "https://platform.twitter.com/widgets.js";
							document.querySelector('head').appendChild(newScript);
						}
						if(a.questions.length > 0) {
							return `<cagov-accordion>
								<details>
									<summary><h4>${a.questions.join(' ')}</h4></summary>
									<div class="accordion-body">
										${a.answer}
									</div>
								</details>
							</cagov-accordion>`;
						} else {
							return '';
						}
				}).join('	')}`
				document.querySelector('#answersNow').innerHTML = html;

				// send an event that we got quick answers	
				if(typeof(ga) !== 'undefined') {
					ga('send', 'event', 'search', 'got_quick_answers', query.toLowerCase());
				}
			} else {
				// send an event with or without answers
				if(typeof(ga) !== 'undefined') {
					ga('send', 'event', 'search', 'no_quick_answers', query.toLowerCase());
				}
			}
		});
	}
	myWebSearchStartingCallback(query)
</script>
<script>
	String.prototype.hashCode = function() {
		var hash = 0, i, chr;
		if (this.length === 0) return hash;
		for (i = 0; i < this.length; i++) {
			chr   = this.charCodeAt(i);
			hash  = ((hash << 5) - hash) + chr;
			hash |= 0; // Convert to 32bit integer
		}
		return hash;
	};

	const rejectList = [
		3154295, -891899646, 3446907, -1263686556,
		-519573749, 32245991, -1045620280, 3083181, 
		105116, 3059156, -717313205, -20842805,
		3529280, 3441177, 3065272, 3541578,
		-1220868373, -1944906010, 768376821, -1675033524,
		208656131, 1161177713, -865057523, 1652680792, 937334084,
		354670409, 
		940710456
	];

	const isRejected = function(phrase) {
		console.log("search check",phrase,phrase.hashCode());
		return phrase.match(/\S+/g).length > 4 || 
			   phrase.length < 4 ||
			   phrase.search(/(@|\w+\.\w+)/) != -1 ||
			   rejectList.includes(phrase.hashCode()) ||
    	       phrase.split(' ').find(wrd=>(rejectList.includes(wrd.hashCode()))) != undefined;
	};

	const popularQueryiesCallback = data => {
		let pqs = 
		document.querySelector('#queries').innerHTML += data.popularQueries
			.filter(x=>(x.num > 10))
			.map(x=>x.query)
			.filter(x=>!isRejected(x))
			.map(x=>
				`<a rel="nofollow" class="action-link border-0 mr-3 mb-3" style="margin:0" href="?q=${x}">${x}</a>`
			).join('');
	}
</script>
<!-- disabled for now
<script src="https://cse.google.com/api/003358532045999200914:uxxka6d3pge/popularqueryjs?view=week&callback=popularQueryiesCallback"></script>
-->